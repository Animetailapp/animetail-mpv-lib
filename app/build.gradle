apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

ext.abiCodes = ["armeabi-v7a": 1, "arm64-v8a": 2, "x86":3, "x86_64":4]

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 29
        versionName "1.4"
        vectorDrawables.useSupportLibrary = true
    }

    flavorDimensions "default"
    productFlavors {
        "default" {
            isDefault true
        }
        api29 {
            targetSdkVersion 29
            versionNameSuffix "-oldapi"
        }
    }

    buildFeatures {
        viewBinding = true
    }

    splits {
        abi {
            enable true
            reset()
            // include only the ABIs that were actually built
            project.ext.abiCodes.each { abi, _ ->
                if (new File(project.projectDir, "src/main/jniLibs/${abi}").exists())
                    include(abi)
            }
            universalApk true // build an APK with all ABIs too
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.media:media:1.6.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
}

def getVersionName = { ->
    return "1.4"
}

def getGroupId = { ->
    return "com.github.jmir1"
}


task sourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId getGroupId()
            version getVersionName()
            // Place the path of your artifact here
            artifact("$buildDir/outputs/aar/aniyomi-mpv-lib-release.aar")
            artifact(tasks["sourceJar"])
        }
    }
}
